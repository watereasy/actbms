<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.pmm</groupId>
	<artifactId>actbms</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<dependencies>
		<!-- <dependency> <groupId>org.apache.struts</groupId> <artifactId>struts2-core</artifactId> 
			<version>2.3.15.1</version> </dependency> -->
	</dependencies>

	<!-- 项目属性 -->
	<properties>
		<jdk.version>1.6</jdk.version>
	</properties>
	<build>		
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
		<!-- 默认源代码和资源文件目录配置 -->
		<sourceDirectory>src/main/java </sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		
		<plugins>
		<!-- 扩展源代码和资源文件目录 -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.codehaus.mojo</groupId> -->
<!-- 				<artifactId>build-helper-maven-plugin</artifactId> -->
<!-- 				<version>2.5.1</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>add-source</id> -->
<!-- 						<phase>generate-sources</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>add-source</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<sources> -->
<!-- 								我们可以通过在这里添加多个source节点，来添加任意多个源文件夹 -->
<!-- 								<source>${basedir}/src/multimodule/sources</source> -->
<!-- 							</sources> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 					<execution> -->
<!-- 						<id>add-resource</id> -->
<!-- 						<phase>generate-resources</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>add-resource</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<resources> -->
<!-- 								我们可以通过在这里添加多个resource节点 -->
<!-- 								<resource> -->
<!-- 									<directory>${basedir}/src/main/java/activity/core/intercepters</directory> -->
<!-- 								</resource> -->
<!-- 							</resources> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
			
			<!-- Compiler 插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
      					<extdirs>src\main\webapp\WEB-INF\lib</extdirs>
    				</compilerArguments>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
       			<groupId>org.apache.maven.plugins</groupId>
       			<artifactId>maven-war-plugin</artifactId>
            	<configuration>
<!--             		<warSourceExcludes>src/main/webapp/WEB-INF/lib/servlet-api-2.5-6.1.14.jar</warSourceExcludes> -->
<!--                 	<webResources> -->
<!--                     	<resource> -->
<!--                         	<directory>${basedir}/src/main/webapp/WEB-INF/lib</directory> -->
<!--                         	<targetPath>WEB-INF/lib</targetPath> -->
<!--                         	<filtering>false</filtering> -->
<!--                         	<excludes> -->
<!--                            	 	<exclude>${basedir}src/main/webapp/WEB-INF/lib/servlet-api-2.5-6.1.14.jar</exclude> -->
<!--                         	</excludes> -->
<!--                     	</resource> -->
<!--                 	</webResources> -->

					<webappDirectory>webapp</webappDirectory>
<!-- 					必须指定,否则默认会变成在target/war/work 导致被打包进war文件,指定后为target/work -->
					<workDirectory>${project.build.directory}/work</workDirectory>
					<useCache>false</useCache>
					<packagingExcludes>WEB-INF/lib/servlet-api-2.5-6.1.14.jar</packagingExcludes>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
					</archive>
					
            	</configuration>
 			</plugin>
		</plugins>	
	</build>
</project>